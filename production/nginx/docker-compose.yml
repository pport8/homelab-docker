#########################
## NGINX Reverse Proxy ##
#########################
version: '3.5'
services:
  nginx:
    container_name: nginx
    image: jwilder/nginx-proxy:alpine
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${VOLUMES_PATH}/nginx/volumes/html:/usr/share/nginx/html:rw
      - ${VOLUMES_PATH}/nginx/volumes/conf.d:/etc/nginx/conf.d:rw
      - ${VOLUMES_PATH}/nginx/volumes/vhost.d:/etc/nginx/vhost.d:ro
      - ${VOLUMES_PATH}/nginx/volumes/certs:/etc/nginx/certs:ro
      - ${VOLUMES_PATH}/nginx/volumes/htpasswd:/etc/nginx/htpasswd:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - PRETTY_NAME=Nginx RProxy
    networks:
      - reverse-proxy
    restart: unless-stopped
  
  letsencrypt:
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx
    volumes:
      - ${VOLUMES_PATH}/nginx/volumes/certs:/etc/nginx/certs:rw
      - ${VOLUMES_PATH}/nginx/volumes/vhost.d:/etc/nginx/vhost.d:rw
      - ${VOLUMES_PATH}/nginx/volumes/html:/usr/share/nginx/html:rw
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PRETTY_NAME=Let's Encrypt
    networks:
      - reverse-proxy
    restart: unless-stopped

networks:
  reverse-proxy:
    name: reverse-proxy
    driver: bridge

